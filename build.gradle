buildscript {
	repositories {
		maven {
			name = 'Fabric'
			url = 'https://maven.fabricmc.net/'
		}
		mavenCentral()
		maven { 
			name = 'Jitpack'
			url 'https://jitpack.io/'
		}
		maven {
			name = 'HalfOf2'
			url = 'https://storage.googleapis.com/devan-maven/'
		}
	}
	dependencies {
		classpath 'com.github.Chocohead:Fabric-Loom:9b38aba'
	}
}

apply plugin: 'fabric-loom'

sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8

archivesBaseName = project.archives_base_name
version = project.mod_version
group = project.maven_group

repositories {
	maven { 
		name = 'Jitpack'
		url 'https://jitpack.io/'
	}
	maven {
		name = 'HalfOf2'
		url = 'https://storage.googleapis.com/devan-maven/'
	}
}

minecraft {
	//Skip old versions of libraries which Mojang use but we don't need
	addLibraryFilter {library ->
		return !(library.startsWith('net.minecraft:launchwrapper:') ||
					library.startsWith('net.sf.jopt-simple:jopt-simple:') ||
					library.startsWith('org.ow2.asm:asm-all:'))
	}
}

dependencies {
	//to change the versions see the gradle.properties file
	minecraft "com.mojang:minecraft:${project.minecraft_version}"

	mappings "io.github.minecraft-cursed-legacy:plasma:b1.7.3-build.${project.plasma_build}"

	modImplementation("io.github.minecraft-cursed-legacy:cursed-fabric-loader:${project.loader_version}") {
		transitive false
	}

	// API. You technically don't need it, but it's extremely useful for not having to write the same code in every mod.
	modImplementation "io.github.minecraft-cursed-legacy:cursed-legacy-api:${project.api_version}"
}

processResources {
	inputs.property 'version', project.version

	from(sourceSets.main.resources.srcDirs) {
		include 'fabric.mod.json'
		expand 'version': project.version
	}

	from(sourceSets.main.resources.srcDirs) {
		exclude 'fabric.mod.json'
	}
}

// ensure that the encoding is set to UTF-8, no matter what the system default is
// this fixes some edge cases with special characters not displaying correctly
// see http://yodaconditions.net/blog/fix-for-java-file-encoding-problems-with-gradle.html
tasks.withType(JavaCompile) {
	options.encoding = 'UTF-8'
}

// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
// if it is present.
// If you remove this task, sources will not be generated.
task sourcesJar(type: Jar, dependsOn: classes) {
	classifier = 'sources'
	from sourceSets.main.allSource
}
